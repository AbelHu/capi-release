#!/usr/bin/env bash

#for cloud_controller_ng and cloud_controller_api_worker
TMPDIR=/var/vcap/data/cloud_controller_ng/tmp
RUN_DIR=/var/vcap/sys/run/cloud_controller_ng
LOG_DIR=/var/vcap/sys/log/cloud_controller_ng

mkdir -p $RUN_DIR
mkdir -p $LOG_DIR
mkdir -p $TMPDIR

chown vcap:vcap $RUN_DIR
chown -R vcap:vcap $LOG_DIR
chown vcap:vcap $TMPDIR
echo $?


<% if_p("cc.directories.diagnostics") do |diag_dir| %>
mkdir -p <%= diag_dir %>
chown vcap:vcap <%= diag_dir %>
<% end %>

mkdir -p /var/vcap/sys/cores
chown vcap:vcap /var/vcap/sys/cores

#for cloud_controller_migrations
RUN_DIR=/var/vcap/sys/run/cloud_controller_migration
LOG_DIR=/var/vcap/sys/log/cloud_controller_migration

mkdir -p $RUN_DIR
mkdir -p $LOG_DIR

chown vcap:vcap $RUN_DIR
chown -R vcap:vcap $LOG_DIR

# for cloud_controller workers

RUN_DIR=/var/vcap/sys/run/cloud_controller_worker
LOG_DIR=/var/vcap/sys/log/cloud_controller_worker

mkdir -p $RUN_DIR
mkdir -p $LOG_DIR

chown vcap:vcap $RUN_DIR
chown -R vcap:vcap $LOG_DIR

# for cloud_controller worker blobstore dirs

<%

directories = []

if p("cc.packages.blobstore_type").downcase == "fog" && p("cc.packages.fog_connection.provider", "").downcase == "local"
  directories << p("cc.packages.fog_connection.local_root")
end

if p("cc.buildpacks.blobstore_type").downcase == "fog" && p("cc.buildpacks.fog_connection.provider", "").downcase == "local"
  directories << p("cc.buildpacks.fog_connection.local_root")
end

if p("cc.resource_pool.blobstore_type").downcase == "fog" && p("cc.resource_pool.fog_connection.provider", "").downcase == "local"
  directories << p("cc.resource_pool.fog_connection.local_root")
end

if p("cc.droplets.blobstore_type").downcase == "fog" && p("cc.droplets.fog_connection.provider", "").downcase == "local"
  directories << p("cc.droplets.fog_connection.local_root")
end

directories.each do |path| %>
  mkdir -p <%= path %>
  chown -R vcap:vcap <%= path %>
<% end %>

exit 0

